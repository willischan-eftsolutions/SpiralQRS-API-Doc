openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/EFT-Solutions-Ltd/SpiralQRS/1.0.0
info:
  description: This is a API for Spiral QRS (Queuing Reservation System)
  version: "1.0.0"
  title: Spiral QRS API
  contact:
    email: it.support@eftsolutions.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Kiosk
    description: API calls for Kiosk that used for release tickets.
  - name: developers
    description: Operations available to regular developers
paths:
  /inventory:
    get:
      tags:
        - developers
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an inventory item
      operationId: addInventory
      description: |
        Adds an item to the system <br>
        Testing
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
  /merchants/{clientId}/tickets/{orderId}:
    put:
      tags:
        - Kiosk
      summary: createp new ticket
      operationId: newTicket
      description: |
        Creating a new ticket
      parameters:
        - in: path
          name: clientId
          description: the client ID represented for the merchant account
          schema:
            type: string
          example: 'eftit'
          required: true
        - in: path
          name: orderId
          description: the client ID represented for the merchant account
          schema:
            type: string
          example: 'eftit'
          required: true
        - in: query
          name: orderId
          description: UUID generated in random
          example: '5914173f-30fe-49b5-a445-8d2d57049564'
          required: true
          schema:
            type: string
        - in: query
          name: storeId
          description: to indicate which store of the merchant
          example: 'SHOP-012'
          required: true
          schema:
            type: string
        - in: query
          name: queueId
          description: to indicate which queue for the ticket
          required: true
          example: 'Q1'
          schema:
            type: string
        - in: query
          name: counterId
          description: to indicate specified counter (table)
          schema:
            type: string
      responses:
        '200':
          description: query/command execuated normally
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add 
      operationId: pickTicket
      description: pick a ticket
      parameters:
        - in: path
          name: clientId
          description: the client ID represented for the merchant account
          schema:
            type: string
          example: 'eftit'
          required: true
        - in: path
          name: orderId
          description: UUID generated in random
          example: '5914173f-30fe-49b5-a445-8d2d57049564'
          required: true
          schema:
            type: string
        - in: query
          name: storeId
          description: to indicate which store of the merchant
          example: 'SHOP-012'
          required: true
          schema:
            type: string
        - in: query
          name: queueId
          description: to indicate which queue for the ticket
          required: true
          example: 'Q1'
          schema:
            type: string
        - in: query
          name: counterId
          description: to indicate specified counter (table)
          schema:
            type: string
      responses:
        '200':
          description: query/command execuated normally
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add 
components:
  schemas:
    InventoryItem:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object

